import pepita.*
import comidas.*
import niveles.*
import checkpoints.*
import wollok.game.*

object nivel1 inherits Nivel {

	override method agregarPersonajes() {
		game.addVisual(manzana)
		game.addVisual(nido)
		game.addVisual(pepita)
	}

	override method configurarTeclas() {
		keyboard.c().onPressDo({ const comida = pepita.interactuado()
			pepita.come(comida)
			game.removeVisual(comida)
		})
		keyboard.e().onPressDo({ pepita.cantaEnergia()})
		keyboard.up().onPressDo({ pepita.irA(pepita.position().up(1))})
		keyboard.down().onPressDo({ pepita.irA(pepita.position().down(1))})
		keyboard.left().onPressDo({ pepita.irA(pepita.position().left(1))})
		keyboard.right().onPressDo({ pepita.irA(pepita.position().right(1))})
	}

	override method objetivos() {
		return [ nido ]
	}

	override method proximoNivel() {
		return nivel2
	}

}

object nivel2 inherits Nivel {

	override method iniciar() {
		super()
		self.gravedad()
	}

	override method agregarPersonajes() {
		game.addVisual(manzana)
		game.addVisual(nido)
		game.addVisual(pepita)
		game.addVisual(hijo)
	}

	override method configurarTeclas() {
		keyboard.c().onPressDo({ const comida = pepita.interactuado()
			pepita.come(comida)
			game.removeVisual(comida)
		})
		keyboard.e().onPressDo({ pepita.cantaEnergia()})
		keyboard.up().onPressDo({ pepita.irA(pepita.position().up(1))})
		keyboard.down().onPressDo({ pepita.irA(pepita.position().down(1))})
		keyboard.left().onPressDo({ pepita.irA(pepita.position().left(1))})
		keyboard.right().onPressDo({ pepita.irA(pepita.position().right(1))})
	}

	override method configurarColisiones() {
		game.onCollideDo(hijo, { ave => ave.alimenta(hijo)})
	}

	override method objetivos() {
		return [ nido, hijo ]
	}

	override method proximoNivel() {
		return nivel3
	}

	method gravedad() {
		game.onTick(600, "Gravedad", { pepita.caer()})
	}

}

object nivel3 inherits Nivel {

	override method objetivos() {
		return [ nido, hijo ]
	}

	override method pasarDeNivel() {
		game.say(pepita, "Â¡GANASTE!")
		game.schedule(3000, { game.stop()})
	}

}

class Nivel {

	method objetivos() = []

	method proximoNivel() = null

	method agregarPersonajes() {
	// TODO: Autogenerated Code ! 
	}

	method configurarTeclas() {
	// TODO: Autogenerated Code ! 
	}

	method configurarColisiones() {
	// TODO: Autogenerated Code ! 
	}

	method iniciar() {
		self.agregarPersonajes()
		self.configurarTeclas()
		self.configurarColisiones()
		self.escucharObjetivos()
	}

	method escucharObjetivos() {
		self.objetivos().forEach({ objetivo => game.onCollideDo(objetivo, { _ => self.pasarDeNivel()})})
	}

	method estaCompletado() {
		return self.objetivos().all({ objetivo => objetivo.estaLogrado() })
	}

	method pasarDeNivel() {
		if (self.estaCompletado()) {
			game.clear()
			self.proximoNivel().iniciar()
		}
	}

}

